\\\\\\\\\\\\\\\\\\\\
Code for gradient of loss function of Actor:

syms theta1 theta2 theta3 theta4 theta5 theta6 theta7 theta8 theta9 theta10 theta11 theta12 theta13 theta14 theta15 phi1 phi2 phi3 phi4 phi5 phi6 phi7 phi8 phi9 phi10 phi11 phi12 phi13 phi14 phi14 phi15 s1 s2 s3 s4 ss1 ss2 ss3 ss4 a sig r gamma
theta = [theta1 ;theta2 ;theta3 ;theta4 ;theta5 ;theta6 ;theta7 ;theta8 ;theta9 ;theta10 ;theta11 ;theta12 ;theta13 ;theta14 ;theta15];
phi = [phi1;phi2;phi3;phi4;phi5;phi6;phi7;phi8;phi9;phi10;phi11;phi12;phi13;phi14;phi15];
s_vec = [s1^2  2*s1*s2  2*s1*s3  2*s1*s4  2*s1  s2^2  2*s2*s3  2*s2*s4  2*s2  s3^2  2*s3*s4  2*s3  s4^2  2*s4  1];
ss_vec = [ss1^2  2*ss1*ss2  2*ss1*ss3  2*ss1*ss4  2*ss1  ss2^2  2*ss2*ss3  2*ss2*ss4  2*ss2  ss3^2  2*ss3*ss4  2*ss3  ss4^2  2*ss4  1];
   mu = s_vec*theta;
   pdf = 1/sqrt(2*pi*sig^2)*exp(-(a - mu)^2/(2*sig^2));
   J = log(pdf)*(r + gamma*ss_vec*phi - s_vec*phi);
   grad = gradient(J);
   grad = grad(28:42);

Result:
grad = [  

-(s1^2*(theta1*s1^2 + 2*theta2*s1*s2 + 2*theta3*s1*s3 + 2*theta4*s1*s4 + 2*theta5*s1 + theta6*s2^2 + 2*theta7*s2*s3 + 2*theta8*s2*s4 + 2*theta9*s2 + theta10*s3^2 + 2*theta11*s3*s4 + 2*theta12*s3 + theta13*s4^2 + 2*theta14*s4 - a + theta15)*(- phi1*s1^2 - 2*phi2*s1*s2 - 2*phi3*s1*s3 - 2*phi4*s1*s4 - 2*phi5*s1 - phi6*s2^2 - 2*phi7*s2*s3 - 2*phi8*s2*s4 - 2*phi9*s2 - phi10*s3^2 - 2*phi11*s3*s4 - 2*phi12*s3 - phi13*s4^2 - 2*phi14*s4 + phi1*gamma*ss1^2 + 2*phi2*gamma*ss1*ss2 + 2*phi3*gamma*ss1*ss3 + 2*phi4*gamma*ss1*ss4 + 2*phi5*gamma*ss1 + phi6*gamma*ss2^2 + 2*phi7*gamma*ss2*ss3 + 2*phi8*gamma*ss2*ss4 + 2*phi9*gamma*ss2 + phi10*gamma*ss3^2 + 2*phi11*gamma*ss3*ss4 + 2*phi12*gamma*ss3 + phi13*gamma*ss4^2 + 2*phi14*gamma*ss4 - phi15 + r + phi15*gamma))/sig^2;
-(s3^2*(theta1*s1^2 + 2*theta2*s1*s2 + 2*theta3*s1*s3 + 2*theta4*s1*s4 + 2*theta5*s1 + theta6*s2^2 + 2*theta7*s2*s3 + 2*theta8*s2*s4 + 2*theta9*s2 + theta10*s3^2 + 2*theta11*s3*s4 + 2*theta12*s3 + theta13*s4^2 + 2*theta14*s4 - a + theta15)*(- phi1*s1^2 - 2*phi2*s1*s2 - 2*phi3*s1*s3 - 2*phi4*s1*s4 - 2*phi5*s1 - phi6*s2^2 - 2*phi7*s2*s3 - 2*phi8*s2*s4 - 2*phi9*s2 - phi10*s3^2 - 2*phi11*s3*s4 - 2*phi12*s3 - phi13*s4^2 - 2*phi14*s4 + phi1*gamma*ss1^2 + 2*phi2*gamma*ss1*ss2 + 2*phi3*gamma*ss1*ss3 + 2*phi4*gamma*ss1*ss4 + 2*phi5*gamma*ss1 + phi6*gamma*ss2^2 + 2*phi7*gamma*ss2*ss3 + 2*phi8*gamma*ss2*ss4 + 2*phi9*gamma*ss2 + phi10*gamma*ss3^2 + 2*phi11*gamma*ss3*ss4 + 2*phi12*gamma*ss3 + phi13*gamma*ss4^2 + 2*phi14*gamma*ss4 - phi15 + r + phi15*gamma))/sig^2;
-(2*s3*s4*(theta1*s1^2 + 2*theta2*s1*s2 + 2*theta3*s1*s3 + 2*theta4*s1*s4 + 2*theta5*s1 + theta6*s2^2 + 2*theta7*s2*s3 + 2*theta8*s2*s4 + 2*theta9*s2 + theta10*s3^2 + 2*theta11*s3*s4 + 2*theta12*s3 + theta13*s4^2 + 2*theta14*s4 - a + theta15)*(- phi1*s1^2 - 2*phi2*s1*s2 - 2*phi3*s1*s3 - 2*phi4*s1*s4 - 2*phi5*s1 - phi6*s2^2 - 2*phi7*s2*s3 - 2*phi8*s2*s4 - 2*phi9*s2 - phi10*s3^2 - 2*phi11*s3*s4 - 2*phi12*s3 - phi13*s4^2 - 2*phi14*s4 + phi1*gamma*ss1^2 + 2*phi2*gamma*ss1*ss2 + 2*phi3*gamma*ss1*ss3 + 2*phi4*gamma*ss1*ss4 + 2*phi5*gamma*ss1 + phi6*gamma*ss2^2 + 2*phi7*gamma*ss2*ss3 + 2*phi8*gamma*ss2*ss4 + 2*phi9*gamma*ss2 + phi10*gamma*ss3^2 + 2*phi11*gamma*ss3*ss4 + 2*phi12*gamma*ss3 + phi13*gamma*ss4^2 + 2*phi14*gamma*ss4 - phi15 + r + phi15*gamma))/sig^2;
-(2*s3*(theta1*s1^2 + 2*theta2*s1*s2 + 2*theta3*s1*s3 + 2*theta4*s1*s4 + 2*theta5*s1 + theta6*s2^2 + 2*theta7*s2*s3 + 2*theta8*s2*s4 + 2*theta9*s2 + theta10*s3^2 + 2*theta11*s3*s4 + 2*theta12*s3 + theta13*s4^2 + 2*theta14*s4 - a + theta15)*(- phi1*s1^2 - 2*phi2*s1*s2 - 2*phi3*s1*s3 - 2*phi4*s1*s4 - 2*phi5*s1 - phi6*s2^2 - 2*phi7*s2*s3 - 2*phi8*s2*s4 - 2*phi9*s2 - phi10*s3^2 - 2*phi11*s3*s4 - 2*phi12*s3 - phi13*s4^2 - 2*phi14*s4 + phi1*gamma*ss1^2 + 2*phi2*gamma*ss1*ss2 + 2*phi3*gamma*ss1*ss3 + 2*phi4*gamma*ss1*ss4 + 2*phi5*gamma*ss1 + phi6*gamma*ss2^2 + 2*phi7*gamma*ss2*ss3 + 2*phi8*gamma*ss2*ss4 + 2*phi9*gamma*ss2 + phi10*gamma*ss3^2 + 2*phi11*gamma*ss3*ss4 + 2*phi12*gamma*ss3 + phi13*gamma*ss4^2 + 2*phi14*gamma*ss4 - phi15 + r + phi15*gamma))/sig^2;
-(s4^2*(theta1*s1^2 + 2*theta2*s1*s2 + 2*theta3*s1*s3 + 2*theta4*s1*s4 + 2*theta5*s1 + theta6*s2^2 + 2*theta7*s2*s3 + 2*theta8*s2*s4 + 2*theta9*s2 + theta10*s3^2 + 2*theta11*s3*s4 + 2*theta12*s3 + theta13*s4^2 + 2*theta14*s4 - a + theta15)*(- phi1*s1^2 - 2*phi2*s1*s2 - 2*phi3*s1*s3 - 2*phi4*s1*s4 - 2*phi5*s1 - phi6*s2^2 - 2*phi7*s2*s3 - 2*phi8*s2*s4 - 2*phi9*s2 - phi10*s3^2 - 2*phi11*s3*s4 - 2*phi12*s3 - phi13*s4^2 - 2*phi14*s4 + phi1*gamma*ss1^2 + 2*phi2*gamma*ss1*ss2 + 2*phi3*gamma*ss1*ss3 + 2*phi4*gamma*ss1*ss4 + 2*phi5*gamma*ss1 + phi6*gamma*ss2^2 + 2*phi7*gamma*ss2*ss3 + 2*phi8*gamma*ss2*ss4 + 2*phi9*gamma*ss2 + phi10*gamma*ss3^2 + 2*phi11*gamma*ss3*ss4 + 2*phi12*gamma*ss3 + phi13*gamma*ss4^2 + 2*phi14*gamma*ss4 - phi15 + r + phi15*gamma))/sig^2;
-(2*s4*(theta1*s1^2 + 2*theta2*s1*s2 + 2*theta3*s1*s3 + 2*theta4*s1*s4 + 2*theta5*s1 + theta6*s2^2 + 2*theta7*s2*s3 + 2*theta8*s2*s4 + 2*theta9*s2 + theta10*s3^2 + 2*theta11*s3*s4 + 2*theta12*s3 + theta13*s4^2 + 2*theta14*s4 - a + theta15)*(- phi1*s1^2 - 2*phi2*s1*s2 - 2*phi3*s1*s3 - 2*phi4*s1*s4 - 2*phi5*s1 - phi6*s2^2 - 2*phi7*s2*s3 - 2*phi8*s2*s4 - 2*phi9*s2 - phi10*s3^2 - 2*phi11*s3*s4 - 2*phi12*s3 - phi13*s4^2 - 2*phi14*s4 + phi1*gamma*ss1^2 + 2*phi2*gamma*ss1*ss2 + 2*phi3*gamma*ss1*ss3 + 2*phi4*gamma*ss1*ss4 + 2*phi5*gamma*ss1 + phi6*gamma*ss2^2 + 2*phi7*gamma*ss2*ss3 + 2*phi8*gamma*ss2*ss4 + 2*phi9*gamma*ss2 + phi10*gamma*ss3^2 + 2*phi11*gamma*ss3*ss4 + 2*phi12*gamma*ss3 + phi13*gamma*ss4^2 + 2*phi14*gamma*ss4 - phi15 + r + phi15*gamma))/sig^2;
-((2*theta1*s1^2 + 4*theta2*s1*s2 + 4*theta3*s1*s3 + 4*theta4*s1*s4 + 4*theta5*s1 + 2*theta6*s2^2 + 4*theta7*s2*s3 + 4*theta8*s2*s4 + 4*theta9*s2 + 2*theta10*s3^2 + 4*theta11*s3*s4 + 4*theta12*s3 + 2*theta13*s4^2 + 4*theta14*s4 - 2*a + 2*theta15)*(- phi1*s1^2 - 2*phi2*s1*s2 - 2*phi3*s1*s3 - 2*phi4*s1*s4 - 2*phi5*s1 - phi6*s2^2 - 2*phi7*s2*s3 - 2*phi8*s2*s4 - 2*phi9*s2 - phi10*s3^2 - 2*phi11*s3*s4 - 2*phi12*s3 - phi13*s4^2 - 2*phi14*s4 + phi1*gamma*ss1^2 + 2*phi2*gamma*ss1*ss2 + 2*phi3*gamma*ss1*ss3 + 2*phi4*gamma*ss1*ss4 + 2*phi5*gamma*ss1 + phi6*gamma*ss2^2 + 2*phi7*gamma*ss2*ss3 + 2*phi8*gamma*ss2*ss4 + 2*phi9*gamma*ss2 + phi10*gamma*ss3^2 + 2*phi11*gamma*ss3*ss4 + 2*phi12*gamma*ss3 + phi13*gamma*ss4^2 + 2*phi14*gamma*ss4 - phi15 + r + phi15*gamma))/(2*sig^2);
-(2*s1*s2*(theta1*s1^2 + 2*theta2*s1*s2 + 2*theta3*s1*s3 + 2*theta4*s1*s4 + 2*theta5*s1 + theta6*s2^2 + 2*theta7*s2*s3 + 2*theta8*s2*s4 + 2*theta9*s2 + theta10*s3^2 + 2*theta11*s3*s4 + 2*theta12*s3 + theta13*s4^2 + 2*theta14*s4 - a + theta15)*(- phi1*s1^2 - 2*phi2*s1*s2 - 2*phi3*s1*s3 - 2*phi4*s1*s4 - 2*phi5*s1 - phi6*s2^2 - 2*phi7*s2*s3 - 2*phi8*s2*s4 - 2*phi9*s2 - phi10*s3^2 - 2*phi11*s3*s4 - 2*phi12*s3 - phi13*s4^2 - 2*phi14*s4 + phi1*gamma*ss1^2 + 2*phi2*gamma*ss1*ss2 + 2*phi3*gamma*ss1*ss3 + 2*phi4*gamma*ss1*ss4 + 2*phi5*gamma*ss1 + phi6*gamma*ss2^2 + 2*phi7*gamma*ss2*ss3 + 2*phi8*gamma*ss2*ss4 + 2*phi9*gamma*ss2 + phi10*gamma*ss3^2 + 2*phi11*gamma*ss3*ss4 + 2*phi12*gamma*ss3 + phi13*gamma*ss4^2 + 2*phi14*gamma*ss4 - phi15 + r + phi15*gamma))/sig^2;
-(2*s1*s3*(theta1*s1^2 + 2*theta2*s1*s2 + 2*theta3*s1*s3 + 2*theta4*s1*s4 + 2*theta5*s1 + theta6*s2^2 + 2*theta7*s2*s3 + 2*theta8*s2*s4 + 2*theta9*s2 + theta10*s3^2 + 2*theta11*s3*s4 + 2*theta12*s3 + theta13*s4^2 + 2*theta14*s4 - a + theta15)*(- phi1*s1^2 - 2*phi2*s1*s2 - 2*phi3*s1*s3 - 2*phi4*s1*s4 - 2*phi5*s1 - phi6*s2^2 - 2*phi7*s2*s3 - 2*phi8*s2*s4 - 2*phi9*s2 - phi10*s3^2 - 2*phi11*s3*s4 - 2*phi12*s3 - phi13*s4^2 - 2*phi14*s4 + phi1*gamma*ss1^2 + 2*phi2*gamma*ss1*ss2 + 2*phi3*gamma*ss1*ss3 + 2*phi4*gamma*ss1*ss4 + 2*phi5*gamma*ss1 + phi6*gamma*ss2^2 + 2*phi7*gamma*ss2*ss3 + 2*phi8*gamma*ss2*ss4 + 2*phi9*gamma*ss2 + phi10*gamma*ss3^2 + 2*phi11*gamma*ss3*ss4 + 2*phi12*gamma*ss3 + phi13*gamma*ss4^2 + 2*phi14*gamma*ss4 - phi15 + r + phi15*gamma))/sig^2;
-(2*s1*s4*(theta1*s1^2 + 2*theta2*s1*s2 + 2*theta3*s1*s3 + 2*theta4*s1*s4 + 2*theta5*s1 + theta6*s2^2 + 2*theta7*s2*s3 + 2*theta8*s2*s4 + 2*theta9*s2 + theta10*s3^2 + 2*theta11*s3*s4 + 2*theta12*s3 + theta13*s4^2 + 2*theta14*s4 - a + theta15)*(- phi1*s1^2 - 2*phi2*s1*s2 - 2*phi3*s1*s3 - 2*phi4*s1*s4 - 2*phi5*s1 - phi6*s2^2 - 2*phi7*s2*s3 - 2*phi8*s2*s4 - 2*phi9*s2 - phi10*s3^2 - 2*phi11*s3*s4 - 2*phi12*s3 - phi13*s4^2 - 2*phi14*s4 + phi1*gamma*ss1^2 + 2*phi2*gamma*ss1*ss2 + 2*phi3*gamma*ss1*ss3 + 2*phi4*gamma*ss1*ss4 + 2*phi5*gamma*ss1 + phi6*gamma*ss2^2 + 2*phi7*gamma*ss2*ss3 + 2*phi8*gamma*ss2*ss4 + 2*phi9*gamma*ss2 + phi10*gamma*ss3^2 + 2*phi11*gamma*ss3*ss4 + 2*phi12*gamma*ss3 + phi13*gamma*ss4^2 + 2*phi14*gamma*ss4 - phi15 + r + phi15*gamma))/sig^2;
-(2*s1*(theta1*s1^2 + 2*theta2*s1*s2 + 2*theta3*s1*s3 + 2*theta4*s1*s4 + 2*theta5*s1 + theta6*s2^2 + 2*theta7*s2*s3 + 2*theta8*s2*s4 + 2*theta9*s2 + theta10*s3^2 + 2*theta11*s3*s4 + 2*theta12*s3 + theta13*s4^2 + 2*theta14*s4 - a + theta15)*(- phi1*s1^2 - 2*phi2*s1*s2 - 2*phi3*s1*s3 - 2*phi4*s1*s4 - 2*phi5*s1 - phi6*s2^2 - 2*phi7*s2*s3 - 2*phi8*s2*s4 - 2*phi9*s2 - phi10*s3^2 - 2*phi11*s3*s4 - 2*phi12*s3 - phi13*s4^2 - 2*phi14*s4 + phi1*gamma*ss1^2 + 2*phi2*gamma*ss1*ss2 + 2*phi3*gamma*ss1*ss3 + 2*phi4*gamma*ss1*ss4 + 2*phi5*gamma*ss1 + phi6*gamma*ss2^2 + 2*phi7*gamma*ss2*ss3 + 2*phi8*gamma*ss2*ss4 + 2*phi9*gamma*ss2 + phi10*gamma*ss3^2 + 2*phi11*gamma*ss3*ss4 + 2*phi12*gamma*ss3 + phi13*gamma*ss4^2 + 2*phi14*gamma*ss4 - phi15 + r + phi15*gamma))/sig^2;
-(s2^2*(theta1*s1^2 + 2*theta2*s1*s2 + 2*theta3*s1*s3 + 2*theta4*s1*s4 + 2*theta5*s1 + theta6*s2^2 + 2*theta7*s2*s3 + 2*theta8*s2*s4 + 2*theta9*s2 + theta10*s3^2 + 2*theta11*s3*s4 + 2*theta12*s3 + theta13*s4^2 + 2*theta14*s4 - a + theta15)*(- phi1*s1^2 - 2*phi2*s1*s2 - 2*phi3*s1*s3 - 2*phi4*s1*s4 - 2*phi5*s1 - phi6*s2^2 - 2*phi7*s2*s3 - 2*phi8*s2*s4 - 2*phi9*s2 - phi10*s3^2 - 2*phi11*s3*s4 - 2*phi12*s3 - phi13*s4^2 - 2*phi14*s4 + phi1*gamma*ss1^2 + 2*phi2*gamma*ss1*ss2 + 2*phi3*gamma*ss1*ss3 + 2*phi4*gamma*ss1*ss4 + 2*phi5*gamma*ss1 + phi6*gamma*ss2^2 + 2*phi7*gamma*ss2*ss3 + 2*phi8*gamma*ss2*ss4 + 2*phi9*gamma*ss2 + phi10*gamma*ss3^2 + 2*phi11*gamma*ss3*ss4 + 2*phi12*gamma*ss3 + phi13*gamma*ss4^2 + 2*phi14*gamma*ss4 - phi15 + r + phi15*gamma))/sig^2;
-(2*s2*s3*(theta1*s1^2 + 2*theta2*s1*s2 + 2*theta3*s1*s3 + 2*theta4*s1*s4 + 2*theta5*s1 + theta6*s2^2 + 2*theta7*s2*s3 + 2*theta8*s2*s4 + 2*theta9*s2 + theta10*s3^2 + 2*theta11*s3*s4 + 2*theta12*s3 + theta13*s4^2 + 2*theta14*s4 - a + theta15)*(- phi1*s1^2 - 2*phi2*s1*s2 - 2*phi3*s1*s3 - 2*phi4*s1*s4 - 2*phi5*s1 - phi6*s2^2 - 2*phi7*s2*s3 - 2*phi8*s2*s4 - 2*phi9*s2 - phi10*s3^2 - 2*phi11*s3*s4 - 2*phi12*s3 - phi13*s4^2 - 2*phi14*s4 + phi1*gamma*ss1^2 + 2*phi2*gamma*ss1*ss2 + 2*phi3*gamma*ss1*ss3 + 2*phi4*gamma*ss1*ss4 + 2*phi5*gamma*ss1 + phi6*gamma*ss2^2 + 2*phi7*gamma*ss2*ss3 + 2*phi8*gamma*ss2*ss4 + 2*phi9*gamma*ss2 + phi10*gamma*ss3^2 + 2*phi11*gamma*ss3*ss4 + 2*phi12*gamma*ss3 + phi13*gamma*ss4^2 + 2*phi14*gamma*ss4 - phi15 + r + phi15*gamma))/sig^2;
-(2*s2*s4*(theta1*s1^2 + 2*theta2*s1*s2 + 2*theta3*s1*s3 + 2*theta4*s1*s4 + 2*theta5*s1 + theta6*s2^2 + 2*theta7*s2*s3 + 2*theta8*s2*s4 + 2*theta9*s2 + theta10*s3^2 + 2*theta11*s3*s4 + 2*theta12*s3 + theta13*s4^2 + 2*theta14*s4 - a + theta15)*(- phi1*s1^2 - 2*phi2*s1*s2 - 2*phi3*s1*s3 - 2*phi4*s1*s4 - 2*phi5*s1 - phi6*s2^2 - 2*phi7*s2*s3 - 2*phi8*s2*s4 - 2*phi9*s2 - phi10*s3^2 - 2*phi11*s3*s4 - 2*phi12*s3 - phi13*s4^2 - 2*phi14*s4 + phi1*gamma*ss1^2 + 2*phi2*gamma*ss1*ss2 + 2*phi3*gamma*ss1*ss3 + 2*phi4*gamma*ss1*ss4 + 2*phi5*gamma*ss1 + phi6*gamma*ss2^2 + 2*phi7*gamma*ss2*ss3 + 2*phi8*gamma*ss2*ss4 + 2*phi9*gamma*ss2 + phi10*gamma*ss3^2 + 2*phi11*gamma*ss3*ss4 + 2*phi12*gamma*ss3 + phi13*gamma*ss4^2 + 2*phi14*gamma*ss4 - phi15 + r + phi15*gamma))/sig^2;
-(2*s2*(theta1*s1^2 + 2*theta2*s1*s2 + 2*theta3*s1*s3 + 2*theta4*s1*s4 + 2*theta5*s1 + theta6*s2^2 + 2*theta7*s2*s3 + 2*theta8*s2*s4 + 2*theta9*s2 + theta10*s3^2 + 2*theta11*s3*s4 + 2*theta12*s3 + theta13*s4^2 + 2*theta14*s4 - a + theta15)*(- phi1*s1^2 - 2*phi2*s1*s2 - 2*phi3*s1*s3 - 2*phi4*s1*s4 - 2*phi5*s1 - phi6*s2^2 - 2*phi7*s2*s3 - 2*phi8*s2*s4 - 2*phi9*s2 - phi10*s3^2 - 2*phi11*s3*s4 - 2*phi12*s3 - phi13*s4^2 - 2*phi14*s4 + phi1*gamma*ss1^2 + 2*phi2*gamma*ss1*ss2 + 2*phi3*gamma*ss1*ss3 + 2*phi4*gamma*ss1*ss4 + 2*phi5*gamma*ss1 + phi6*gamma*ss2^2 + 2*phi7*gamma*ss2*ss3 + 2*phi8*gamma*ss2*ss4 + 2*phi9*gamma*ss2 + phi10*gamma*ss3^2 + 2*phi11*gamma*ss3*ss4 + 2*phi12*gamma*ss3 + phi13*gamma*ss4^2 + 2*phi14*gamma*ss4 - phi15 + r + phi15*gamma))/sig^2;
 
];

 


\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
code for gradient of Critic:
syms phi1 phi2 phi3 phi4 phi5 phi6 phi7 phi8 phi9 phi10 phi11 phi12 phi13 phi14 phi15 s1 s2 s3 s4 ss1 ss2 ss3 ss4 r gamma
phi = [phi1 ; phi2 ; phi3 ; phi4; phi5 ;phi6 ;phi7 ;phi8; phi9 ;phi10 ;phi11 ;phi12; phi13 ;phi14 ;phi15];
s_vec = [s1^2  2*s1*s2  2*s1*s3  2*s1*s4  2*s1  s2^2  2*s2*s3  2*s2*s4  2*s2  s3^2  2*s3*s4  2*s3  s4^2  2*s4  1];
ss_vec = [ss1^2  2*ss1*ss2  2*ss1*ss3  2*ss1*ss4  2*ss1  ss2^2  2*ss2*ss3  2*ss2*ss4  2*ss2  ss3^2  2*ss3*ss4  2*ss3  ss4^2  2*ss4  1];
J = (r + gamma*ss_vec*phi - s_vec*phi)^2;
grad = gradient(J);
grad = grad(2:16);

Result:
grad = [

2*(- s1^2 + gamma*ss1^2)*(- phi1*s1^2 - 2*phi2*s1*s2 - 2*phi3*s1*s3 - 2*phi4*s1*s4 - 2*phi5*s1 - phi6*s2^2 - 2*phi7*s2*s3 - 2*phi8*s2*s4 - 2*phi9*s2 - phi10*s3^2 - 2*phi11*s3*s4 - 2*phi12*s3 - phi13*s4^2 - 2*phi14*s4 + phi1*gamma*ss1^2 + 2*phi2*gamma*ss1*ss2 + 2*phi3*gamma*ss1*ss3 + 2*phi4*gamma*ss1*ss4 + 2*phi5*gamma*ss1 + phi6*gamma*ss2^2 + 2*phi7*gamma*ss2*ss3 + 2*phi8*gamma*ss2*ss4 + 2*phi9*gamma*ss2 + phi10*gamma*ss3^2 + 2*phi11*gamma*ss3*ss4 + 2*phi12*gamma*ss3 + phi13*gamma*ss4^2 + 2*phi14*gamma*ss4 - phi15 + r + phi15*gamma);
2*(- s3^2 + gamma*ss3^2)*(- phi1*s1^2 - 2*phi2*s1*s2 - 2*phi3*s1*s3 - 2*phi4*s1*s4 - 2*phi5*s1 - phi6*s2^2 - 2*phi7*s2*s3 - 2*phi8*s2*s4 - 2*phi9*s2 - phi10*s3^2 - 2*phi11*s3*s4 - 2*phi12*s3 - phi13*s4^2 - 2*phi14*s4 + phi1*gamma*ss1^2 + 2*phi2*gamma*ss1*ss2 + 2*phi3*gamma*ss1*ss3 + 2*phi4*gamma*ss1*ss4 + 2*phi5*gamma*ss1 + phi6*gamma*ss2^2 + 2*phi7*gamma*ss2*ss3 + 2*phi8*gamma*ss2*ss4 + 2*phi9*gamma*ss2 + phi10*gamma*ss3^2 + 2*phi11*gamma*ss3*ss4 + 2*phi12*gamma*ss3 + phi13*gamma*ss4^2 + 2*phi14*gamma*ss4 - phi15 + r + phi15*gamma);
-2*(2*s3*s4 - 2*gamma*ss3*ss4)*(- phi1*s1^2 - 2*phi2*s1*s2 - 2*phi3*s1*s3 - 2*phi4*s1*s4 - 2*phi5*s1 - phi6*s2^2 - 2*phi7*s2*s3 - 2*phi8*s2*s4 - 2*phi9*s2 - phi10*s3^2 - 2*phi11*s3*s4 - 2*phi12*s3 - phi13*s4^2 - 2*phi14*s4 + phi1*gamma*ss1^2 + 2*phi2*gamma*ss1*ss2 + 2*phi3*gamma*ss1*ss3 + 2*phi4*gamma*ss1*ss4 + 2*phi5*gamma*ss1 + phi6*gamma*ss2^2 + 2*phi7*gamma*ss2*ss3 + 2*phi8*gamma*ss2*ss4 + 2*phi9*gamma*ss2 + phi10*gamma*ss3^2 + 2*phi11*gamma*ss3*ss4 + 2*phi12*gamma*ss3 + phi13*gamma*ss4^2 + 2*phi14*gamma*ss4 - phi15 + r + phi15*gamma);
-2*(2*s3 - 2*gamma*ss3)*(- phi1*s1^2 - 2*phi2*s1*s2 - 2*phi3*s1*s3 - 2*phi4*s1*s4 - 2*phi5*s1 - phi6*s2^2 - 2*phi7*s2*s3 - 2*phi8*s2*s4 - 2*phi9*s2 - phi10*s3^2 - 2*phi11*s3*s4 - 2*phi12*s3 - phi13*s4^2 - 2*phi14*s4 + phi1*gamma*ss1^2 + 2*phi2*gamma*ss1*ss2 + 2*phi3*gamma*ss1*ss3 + 2*phi4*gamma*ss1*ss4 + 2*phi5*gamma*ss1 + phi6*gamma*ss2^2 + 2*phi7*gamma*ss2*ss3 + 2*phi8*gamma*ss2*ss4 + 2*phi9*gamma*ss2 + phi10*gamma*ss3^2 + 2*phi11*gamma*ss3*ss4 + 2*phi12*gamma*ss3 + phi13*gamma*ss4^2 + 2*phi14*gamma*ss4 - phi15 + r + phi15*gamma);
2*(- s4^2 + gamma*ss4^2)*(- phi1*s1^2 - 2*phi2*s1*s2 - 2*phi3*s1*s3 - 2*phi4*s1*s4 - 2*phi5*s1 - phi6*s2^2 - 2*phi7*s2*s3 - 2*phi8*s2*s4 - 2*phi9*s2 - phi10*s3^2 - 2*phi11*s3*s4 - 2*phi12*s3 - phi13*s4^2 - 2*phi14*s4 + phi1*gamma*ss1^2 + 2*phi2*gamma*ss1*ss2 + 2*phi3*gamma*ss1*ss3 + 2*phi4*gamma*ss1*ss4 + 2*phi5*gamma*ss1 + phi6*gamma*ss2^2 + 2*phi7*gamma*ss2*ss3 + 2*phi8*gamma*ss2*ss4 + 2*phi9*gamma*ss2 + phi10*gamma*ss3^2 + 2*phi11*gamma*ss3*ss4 + 2*phi12*gamma*ss3 + phi13*gamma*ss4^2 + 2*phi14*gamma*ss4 - phi15 + r + phi15*gamma);
-2*(2*s4 - 2*gamma*ss4)*(- phi1*s1^2 - 2*phi2*s1*s2 - 2*phi3*s1*s3 - 2*phi4*s1*s4 - 2*phi5*s1 - phi6*s2^2 - 2*phi7*s2*s3 - 2*phi8*s2*s4 - 2*phi9*s2 - phi10*s3^2 - 2*phi11*s3*s4 - 2*phi12*s3 - phi13*s4^2 - 2*phi14*s4 + phi1*gamma*ss1^2 + 2*phi2*gamma*ss1*ss2 + 2*phi3*gamma*ss1*ss3 + 2*phi4*gamma*ss1*ss4 + 2*phi5*gamma*ss1 + phi6*gamma*ss2^2 + 2*phi7*gamma*ss2*ss3 + 2*phi8*gamma*ss2*ss4 + 2*phi9*gamma*ss2 + phi10*gamma*ss3^2 + 2*phi11*gamma*ss3*ss4 + 2*phi12*gamma*ss3 + phi13*gamma*ss4^2 + 2*phi14*gamma*ss4 - phi15 + r + phi15*gamma);
2*(gamma - 1)*(- phi1*s1^2 - 2*phi2*s1*s2 - 2*phi3*s1*s3 - 2*phi4*s1*s4 - 2*phi5*s1 - phi6*s2^2 - 2*phi7*s2*s3 - 2*phi8*s2*s4 - 2*phi9*s2 - phi10*s3^2 - 2*phi11*s3*s4 - 2*phi12*s3 - phi13*s4^2 - 2*phi14*s4 + phi1*gamma*ss1^2 + 2*phi2*gamma*ss1*ss2 + 2*phi3*gamma*ss1*ss3 + 2*phi4*gamma*ss1*ss4 + 2*phi5*gamma*ss1 + phi6*gamma*ss2^2 + 2*phi7*gamma*ss2*ss3 + 2*phi8*gamma*ss2*ss4 + 2*phi9*gamma*ss2 + phi10*gamma*ss3^2 + 2*phi11*gamma*ss3*ss4 + 2*phi12*gamma*ss3 + phi13*gamma*ss4^2 + 2*phi14*gamma*ss4 - phi15 + r + phi15*gamma);
-2*(2*s1*s2 - 2*gamma*ss1*ss2)*(- phi1*s1^2 - 2*phi2*s1*s2 - 2*phi3*s1*s3 - 2*phi4*s1*s4 - 2*phi5*s1 - phi6*s2^2 - 2*phi7*s2*s3 - 2*phi8*s2*s4 - 2*phi9*s2 - phi10*s3^2 - 2*phi11*s3*s4 - 2*phi12*s3 - phi13*s4^2 - 2*phi14*s4 + phi1*gamma*ss1^2 + 2*phi2*gamma*ss1*ss2 + 2*phi3*gamma*ss1*ss3 + 2*phi4*gamma*ss1*ss4 + 2*phi5*gamma*ss1 + phi6*gamma*ss2^2 + 2*phi7*gamma*ss2*ss3 + 2*phi8*gamma*ss2*ss4 + 2*phi9*gamma*ss2 + phi10*gamma*ss3^2 + 2*phi11*gamma*ss3*ss4 + 2*phi12*gamma*ss3 + phi13*gamma*ss4^2 + 2*phi14*gamma*ss4 - phi15 + r + phi15*gamma);
-2*(2*s1*s3 - 2*gamma*ss1*ss3)*(- phi1*s1^2 - 2*phi2*s1*s2 - 2*phi3*s1*s3 - 2*phi4*s1*s4 - 2*phi5*s1 - phi6*s2^2 - 2*phi7*s2*s3 - 2*phi8*s2*s4 - 2*phi9*s2 - phi10*s3^2 - 2*phi11*s3*s4 - 2*phi12*s3 - phi13*s4^2 - 2*phi14*s4 + phi1*gamma*ss1^2 + 2*phi2*gamma*ss1*ss2 + 2*phi3*gamma*ss1*ss3 + 2*phi4*gamma*ss1*ss4 + 2*phi5*gamma*ss1 + phi6*gamma*ss2^2 + 2*phi7*gamma*ss2*ss3 + 2*phi8*gamma*ss2*ss4 + 2*phi9*gamma*ss2 + phi10*gamma*ss3^2 + 2*phi11*gamma*ss3*ss4 + 2*phi12*gamma*ss3 + phi13*gamma*ss4^2 + 2*phi14*gamma*ss4 - phi15 + r + phi15*gamma);
-2*(2*s1*s4 - 2*gamma*ss1*ss4)*(- phi1*s1^2 - 2*phi2*s1*s2 - 2*phi3*s1*s3 - 2*phi4*s1*s4 - 2*phi5*s1 - phi6*s2^2 - 2*phi7*s2*s3 - 2*phi8*s2*s4 - 2*phi9*s2 - phi10*s3^2 - 2*phi11*s3*s4 - 2*phi12*s3 - phi13*s4^2 - 2*phi14*s4 + phi1*gamma*ss1^2 + 2*phi2*gamma*ss1*ss2 + 2*phi3*gamma*ss1*ss3 + 2*phi4*gamma*ss1*ss4 + 2*phi5*gamma*ss1 + phi6*gamma*ss2^2 + 2*phi7*gamma*ss2*ss3 + 2*phi8*gamma*ss2*ss4 + 2*phi9*gamma*ss2 + phi10*gamma*ss3^2 + 2*phi11*gamma*ss3*ss4 + 2*phi12*gamma*ss3 + phi13*gamma*ss4^2 + 2*phi14*gamma*ss4 - phi15 + r + phi15*gamma);
-2*(2*s1 - 2*gamma*ss1)*(- phi1*s1^2 - 2*phi2*s1*s2 - 2*phi3*s1*s3 - 2*phi4*s1*s4 - 2*phi5*s1 - phi6*s2^2 - 2*phi7*s2*s3 - 2*phi8*s2*s4 - 2*phi9*s2 - phi10*s3^2 - 2*phi11*s3*s4 - 2*phi12*s3 - phi13*s4^2 - 2*phi14*s4 + phi1*gamma*ss1^2 + 2*phi2*gamma*ss1*ss2 + 2*phi3*gamma*ss1*ss3 + 2*phi4*gamma*ss1*ss4 + 2*phi5*gamma*ss1 + phi6*gamma*ss2^2 + 2*phi7*gamma*ss2*ss3 + 2*phi8*gamma*ss2*ss4 + 2*phi9*gamma*ss2 + phi10*gamma*ss3^2 + 2*phi11*gamma*ss3*ss4 + 2*phi12*gamma*ss3 + phi13*gamma*ss4^2 + 2*phi14*gamma*ss4 - phi15 + r + phi15*gamma);
2*(- s2^2 + gamma*ss2^2)*(- phi1*s1^2 - 2*phi2*s1*s2 - 2*phi3*s1*s3 - 2*phi4*s1*s4 - 2*phi5*s1 - phi6*s2^2 - 2*phi7*s2*s3 - 2*phi8*s2*s4 - 2*phi9*s2 - phi10*s3^2 - 2*phi11*s3*s4 - 2*phi12*s3 - phi13*s4^2 - 2*phi14*s4 + phi1*gamma*ss1^2 + 2*phi2*gamma*ss1*ss2 + 2*phi3*gamma*ss1*ss3 + 2*phi4*gamma*ss1*ss4 + 2*phi5*gamma*ss1 + phi6*gamma*ss2^2 + 2*phi7*gamma*ss2*ss3 + 2*phi8*gamma*ss2*ss4 + 2*phi9*gamma*ss2 + phi10*gamma*ss3^2 + 2*phi11*gamma*ss3*ss4 + 2*phi12*gamma*ss3 + phi13*gamma*ss4^2 + 2*phi14*gamma*ss4 - phi15 + r + phi15*gamma);
-2*(2*s2*s3 - 2*gamma*ss2*ss3)*(- phi1*s1^2 - 2*phi2*s1*s2 - 2*phi3*s1*s3 - 2*phi4*s1*s4 - 2*phi5*s1 - phi6*s2^2 - 2*phi7*s2*s3 - 2*phi8*s2*s4 - 2*phi9*s2 - phi10*s3^2 - 2*phi11*s3*s4 - 2*phi12*s3 - phi13*s4^2 - 2*phi14*s4 + phi1*gamma*ss1^2 + 2*phi2*gamma*ss1*ss2 + 2*phi3*gamma*ss1*ss3 + 2*phi4*gamma*ss1*ss4 + 2*phi5*gamma*ss1 + phi6*gamma*ss2^2 + 2*phi7*gamma*ss2*ss3 + 2*phi8*gamma*ss2*ss4 + 2*phi9*gamma*ss2 + phi10*gamma*ss3^2 + 2*phi11*gamma*ss3*ss4 + 2*phi12*gamma*ss3 + phi13*gamma*ss4^2 + 2*phi14*gamma*ss4 - phi15 + r + phi15*gamma);
-2*(2*s2*s4 - 2*gamma*ss2*ss4)*(- phi1*s1^2 - 2*phi2*s1*s2 - 2*phi3*s1*s3 - 2*phi4*s1*s4 - 2*phi5*s1 - phi6*s2^2 - 2*phi7*s2*s3 - 2*phi8*s2*s4 - 2*phi9*s2 - phi10*s3^2 - 2*phi11*s3*s4 - 2*phi12*s3 - phi13*s4^2 - 2*phi14*s4 + phi1*gamma*ss1^2 + 2*phi2*gamma*ss1*ss2 + 2*phi3*gamma*ss1*ss3 + 2*phi4*gamma*ss1*ss4 + 2*phi5*gamma*ss1 + phi6*gamma*ss2^2 + 2*phi7*gamma*ss2*ss3 + 2*phi8*gamma*ss2*ss4 + 2*phi9*gamma*ss2 + phi10*gamma*ss3^2 + 2*phi11*gamma*ss3*ss4 + 2*phi12*gamma*ss3 + phi13*gamma*ss4^2 + 2*phi14*gamma*ss4 - phi15 + r + phi15*gamma);
-2*(2*s2 - 2*gamma*ss2)*(- phi1*s1^2 - 2*phi2*s1*s2 - 2*phi3*s1*s3 - 2*phi4*s1*s4 - 2*phi5*s1 - phi6*s2^2 - 2*phi7*s2*s3 - 2*phi8*s2*s4 - 2*phi9*s2 - phi10*s3^2 - 2*phi11*s3*s4 - 2*phi12*s3 - phi13*s4^2 - 2*phi14*s4 + phi1*gamma*ss1^2 + 2*phi2*gamma*ss1*ss2 + 2*phi3*gamma*ss1*ss3 + 2*phi4*gamma*ss1*ss4 + 2*phi5*gamma*ss1 + phi6*gamma*ss2^2 + 2*phi7*gamma*ss2*ss3 + 2*phi8*gamma*ss2*ss4 + 2*phi9*gamma*ss2 + phi10*gamma*ss3^2 + 2*phi11*gamma*ss3*ss4 + 2*phi12*gamma*ss3 + phi13*gamma*ss4^2 + 2*phi14*gamma*ss4 - phi15 + r + phi15*gamma);
];


\\\\\\\\\\\\\\\\\\\\\\\\\\\\





